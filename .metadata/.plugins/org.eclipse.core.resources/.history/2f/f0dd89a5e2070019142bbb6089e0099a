package com.htrfid.finance.controller;

import com.htrfid.finance.entity.WmCostAllotEntity;
import com.htrfid.finance.service.WmCostAllotService;
import com.htrfid.finance.vo.ExpenseDistributionSheetVO;
import com.htrfid.finance.vo.ExpenseDistributionVO;
import com.htrfid.util.Result;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import java.util.List;


/**
 * @className WmCostAllotController
 * @description TODO 费用分配表
 * @author tangmi
 * @email tangmi6698@163.com
 * @date 2018-12-10 19:01
 * @version V1.0.1
 **/
@RestController
@RequestMapping("wmcostallotF")
public class WmCostAllotController {
    @Autowired
    private WmCostAllotService wmCostAllotService;

    /** 
     * @description:TODO 新增/修改费用分配
     * @author tangmi  
     * @eamil tangmi6698@163.com
     * @date 2018-12-11 8:45  
     * @param  expenseDistributionVO
     * @return com.htrfid.util.Result
     */ 
    @RequestMapping("/saveOrUpdate")
    public Result saveOrUpdate(@RequestBody ExpenseDistributionVO expenseDistributionVO){
        return wmCostAllotService.saveOrUpdate(expenseDistributionVO);
    }

    /**
     * @param ids   费用分配明细id
     * @param sobId 账套id
     * @return com.htrfid.util.Result
     * @description:TODO 删除费用分配表数据 支持批量删除
     * @author tangmi
     * @eamil tangmi6698@163.com
     * @date 2018-12-11 16:45
     */
    @RequestMapping("/deleteBatch")
    public Result deleteBatch(@RequestParam("ids[]") Long[] ids,@RequestParam("sobId") Long sobId){
        return wmCostAllotService.deleteBatch(ids,sobId);
    }

    /**
     * @param wmCostAllotEntity
     * @return com.htrfid.util.Result
     * @description:TODO 根据费用分配id和组织id查询费用分配页面展示明细
     * @author tangmi
     * @eamil tangmi6698@163.com
     * @date 2018-12-11 19:42
     */
    @RequestMapping("/queryById")
    public Result queryById(@RequestBody WmCostAllotEntity wmCostAllotEntity){
        return wmCostAllotService.queryById(wmCostAllotEntity);
    }

    /**
     * @param wmCostAllotEntity
     * @return com.htrfid.util.Result
     * @description:TODO 根据 工资类别 , 会计期间 , 会计年度 , 组织id ,查询费用分配列表
     * @author tangmi
     * @eamil tangmi6698@163.com
     * @date 2018-12-11 20:34
     */
    @RequestMapping("/getCostAllocationList")
    public Result getCostAllocationList(@RequestBody WmCostAllotEntity wmCostAllotEntity){
        return wmCostAllotService.getCostAllocationList(wmCostAllotEntity);
    }

    /**
     * @description:TODO 根据ids查询所有的分配表信息
     * @author tangmi
     * @eamil tangmi6698@163.com
     * @date 2018-12-18 10:01
     * @param  ids 分配表id集合
     * @param sobId 组织id
     * @return java.util.List<com.htrfid.finance.entity.WmCostAllotEntity>
     */
    @RequestMapping("/getQueryByIds")
    public List<WmCostAllotEntity> getQueryByIds(@RequestParam("ids") Long [] ids ,@RequestParam("sobId") Long sobId){
        return wmCostAllotService.getQueryByIds(ids,sobId);
    }

    /**
     * @description:TODO 根据费用分配id和工资类别id查费用分配表
     * @author tangmi
     * @eamil tangmi6698@163.com
     * @date 2018-12-20 14:30
     * @param  wageCategoryId 工资类别id
     * @param  sobId 组织id
     * @param costAllocationId 费用分配id
     * @return com.htrfid.finance.vo.ExpenseDistributionSheetVO
     */
    @RequestMapping("/getExpenseDistributionSheet")
    public List<ExpenseDistributionSheetVO> getExpenseDistributionSheet(@RequestParam("wageCategoryId")Long wageCategoryId,
                                                                 @RequestParam("costAllocationId") Long costAllocationId,
                                                                 @RequestParam("sobId") Long sobId){
        return wmCostAllotService.getExpenseDistributionSheet(wageCategoryId,costAllocationId,sobId);
    }

    /**
     * @param categoryId 工资类别id
     * @param sobId 组织id
     * @return com.htrfid.finance.entity.WmCostAllotEntity
     * @description:TODO 根据工资类别id和组织id 查选费用分配列表数据
     * @author tangmi
     * @eamil tangmi6698@163.com
     * @date 2018-12-21 13:14
     */
    @RequestMapping(value = "/getSelected/{sobId}")
    List<WmCostAllotEntity> getWmCostAllotList(@RequestParam("categoryId") Long categoryId,@RequestParam("sobId") Long sobId){
        return wmCostAllotService.getWmCostAllotList(categoryId,sobId);
    }
}
